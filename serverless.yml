service: sls-devagram-auth

frameworkVersion: '3'

custom: 
  userPoolId: 'us-east-1_8EHXttmuc'
  userPoolClientId: '2vpjfe9mckjhdmfmn1is2ie8ns'
  userTableName: 'users-table-${self:provider.stage}'

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'} 
  environment: 
    USER_POOL_ID: ${self:custom.userPoolId}
    USER_POOL_CLIENT_ID: ${self:custom.userPoolClientId}
    USER_TABLE: ${self:custom.userTableName}
  iam:
    role: 
      statements: 
        - Effect: Allow
          Action: 
            - dynamodb:*
          Resource:
            - "arn:aws:dynamodb:${self:provider.region}:*:table:${self:custom.userTableName}"

plugins:
  - serverless-plugin-typescript

functions:
  signup:
    handler: src/functions/auth.register
    events:
      - http:
          path: register
          method: post
          cors: true
  confirmEmail:
    handler: src/functions/auth.confirmEmail
    events:
      - http:
          path: confirmEmail
          method: post
          cors: true
resources:
  Resources:
    CognitoUserPool: 
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:service}-${self:provider.stage}-user-pool
        AdminCreateUserConfig:
          AllowAdminCreateUserOnly: false
        UsernameAttributes:
          - email
        AutoVerifiedAttributes:
          - email
        EmailVerificationMessage: "Seu código de verificação é {####}"
        EmailVerificationSubject: "Código de verificação Devagram"
        Policies: 
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: true
            RequireNumbers: true
            RequireSymbols: true
            RequireUppercase: true
    CognitoUserClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: ${self:service}-${self:provider.stage}-user-pool-client
        UserPoolId: !Ref CognitoUserPool         
        AllowedOAuthFlows:
          - implicit
        AllowedOAuthFlowsUserPoolClient: true
        AllowedOAuthScopes:
          - email
          - openid
        CallbackURLs:
          - https://www.devaria.com.br
        LogoutURLs:
          - https://www.devaria.com.br
        ExplicitAuthFlows:
          - ALLOW_CUSTOM_AUTH
          - ALLOW_USER_SRP_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
        SupportedIdentityProviders:
          - COGNITO
        ReadAttributes:
          - email
        WriteAttributes:
          - email
    CognitoUserDomain:
      Type: AWS::Cognito::UserPoolDomain
      Properties: 
        UserPoolId: !Ref CognitoUserPool
        Domain: ${self:service}-${self:provider.stage}-user-pool-domain-20221120-spinetti
